
var KeyGenerator = function () {
    this._cache = {};
};

KeyGenerator.prototype = {
    constructor: KeyGenerator,
    
    /**
     * Returns a unique key with the given <code>prefix</code>.
     * @param prefix {String} Non-empty.  The prefix to use in the key.
     * @returns {String} A unique key with the given <code>prefix</code>.
     */
    gen: function (prefix) {
        
        if (   typeof prefix !== 'string'
            || prefix === '' )
            throw "IllegalArgumentException: prefix must be a non-empty String.";
        
        var now   = new Date().getTime(),
            cache = this._cache,
            seq   = cache[prefix];
        
        if (typeof seq !== 'number')
            seq = 0;
        
        if (now <= seq)
            now = seq + 1;
        
        cache[prefix] = now;
        
        return prefix + now;
    }
};

module.exports = KeyGenerator;
